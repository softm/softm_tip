<?php
//////////////////////////////////////////////////////////////////////////////
//                                                                          //
//    양력과 음력의 날짜를 자유롭게 변환하는 프로그램 입니다.               //
//    예전에 제가 Delphi 에서 개발했던 소스를 PHP 에 맞게 수정 했습니다.    //
//                                                                          //
// ------------------------------------------------------------------------ //
//                                                                          //
//     Copyright 2001   지 상 영                                            //
//     http://mrjee.pe.kr/                                                  //
//     mrjee@hitel.net                                                      //
//                                                                          //
//////////////////////////////////////////////////////////////////////////////
$kk = array 
  ('1212122322121', // 1881
   '1212121221220',
   '1121121222120',
   '2112132122122',
   '2112112121220',
   '2121211212120',
   '2212321121212',
   '2122121121210',
   '2122121212120',
   '1232122121212',

   '1212121221220', // 1891
   '1121123221222',
   '1121121212220',
   '1212112121220',
   '2121231212121',
   '2221211212120',
   '1221212121210',
   '2123221212121',
   '2121212212120',
   '1211212232212',

   '1211212122210', // 1901
   '2121121212220',
   '1212132112212',
   '2212112112210',
   '2212211212120',
   '1221412121212',
   '1212122121210',
   '2112212122120',
   '1231212122212',
   '1211212122210',

   '2121123122122', // 1911
   '2121121122120',
   '2212112112120',
   '2212231212112',
   '2122121212120',
   '1212122121210',
   '2132122122121',
   '2112121222120',
   '1211212322122',
   '1211211221220',

   '2121121121220', // 1921
   '2122132112122',
   '1221212121120',
   '2121221212110',
   '2122321221212',
   '1121212212210',
   '2112121221220',
   '1231211221222',
   '1211211212220',
   '1221123121221',

   '2221121121210', // 1931
   '2221212112120',
   '1221241212112',
   '1212212212120',
   '1121212212210',
   '2114121212221',
   '2112112122210',
   '2211211412212',
   '2211211212120',
   '2212121121210',

   '2212214112121', // 1941
   '2122122121120',
   '1212122122120',
   '1121412122122',
   '1121121222120',
   '2112112122120',
   '2231211212122',
   '2121211212120',
   '2212121321212',
   '2122121121210',

   '2122121212120', //1951
   '1212142121212',
   '1211221221220',
   '1121121221220',
   '2114112121222',
   '1212112121220',
   '2121211232122',
   '1221211212120',
   '1221212121210',
   '2121223212121',

   '2121212212120', // 1961
   '1211212212210',
   '2121321212221',
   '2121121212220',
   '1212112112210',
   '2223211211221',
   '2212211212120',
   '1221212321212',
   '1212122121210',
   '2112212122120',

   '1211232122212', // 1971
   '1211212122210',
   '2121121122210',
   '2212312112212',
   '2212112112120',
   '2212121232112',
   '2122121212110',
   '2212122121210',
   '2112124122121',
   '2112121221220',

   '1211211221220', // 1981
   '2121321122122',
   '2121121121220',
   '2122112112322',
   '1221212112120',
   '1221221212110',
   '2122123221212',
   '1121212212210',
   '2112121221220',
   '1211231212222',

   '1211211212220', // 1991
   '1221121121220',
   '1223212112121',
   '2221212112120',
   '1221221232112',
   '1212212122120',
   '1121212212210',
   '2112132212221',
   '2112112122210',
   '2211211212210',

   '2221321121212', //2001
   '2212121121210',
   '2212212112120',
   '1232212122112',
   '1212122122120',
   '1121212322122',
   '1121121222120',
   '2112112122120',
   '2211231212122',
   '2121211212120',

   '2122121121210', // 2011
   '2124212112121',
   '2122121212120',
   '1212121223212',
   '1211212221220',
   '1121121221220',
   '2112132121222',
   '1212112121220',
   '2121211212120',
   '2122321121212',

   '1221212121210', // 2021
   '2121221212120',
   '1232121221212',
   '1211212212210',
   '2121123212221',
   '2121121212220',
   '1212112112220',
   '1221231211221',
   '2212211211220',
   '1212212121210',

   '2123212212121', // 2031
   '2112122122120',
   '1211212322212',
   '1211212122210',
   '2121121122120',
   '2212114112122',
   '2212112112120',
   '2212121211210',
   '2212232121211',
   '2122122121210',

   '2112122122120', // 2041
   '1231212122212',
   '1211211221220');

$dt = array 
 (384, 355, 354, 384, 354, 354, 384, 354, 355, 384,
  355, 384, 354, 354, 383, 355, 354, 384, 355, 384,
  354, 355, 383, 354, 355, 384, 354, 355, 384, 354,
  384, 354, 354, 384, 355, 354, 384, 355, 384, 354,
  354, 384, 354, 354, 385, 354, 355, 384, 354, 383,
  354, 355, 384, 355, 354, 384, 354, 384, 354, 354,
  384, 355, 355, 384, 354, 354, 384, 354, 384, 354,
  355, 384, 355, 354, 384, 354, 384, 354, 354, 384,
  355, 354, 384, 355, 353, 384, 355, 384, 354, 355,
  384, 354, 354, 384, 354, 384, 354, 355, 384, 355,
  354, 384, 354, 384, 354, 354, 385, 354, 355, 384,
  354, 354, 383, 355, 384, 355, 354, 384, 354, 354,
  384, 354, 355, 384, 355, 384, 354, 354, 384, 354,
  354, 384, 355, 384, 355, 354, 384, 354, 354, 384,
  354, 355, 384, 354, 384, 355, 354, 383, 355, 354,
  384, 355, 384, 354, 354, 384, 354, 354, 384, 355,
  355, 384, 354);

$day_array = array(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31);


function Solar2Lunar($solYear, $solMonth, $solDay)
{
  global $kk, $dt, $day_array;

  if (($solYear < 1881) || ($solYear > 2043))  return  "error!!!";
  if (($solMonth < 1) || ($solMonth > 12))  return  "error!!!";
  if (($solDay < 1) || ($solDay > 31))  return  "error!!!";

  // 총 일수를 계산한다.
  $solYear--;
  $total_day = $solYear*365 + floor($solYear/4) - floor($solYear/100) + floor($solYear/400);
  $solYear++;
  if ((($solYear % 4) == 0) && (($solYear % 100) != 0) || (($solYear % 400) == 0))
    $day_array[1] = 29;
  else
    $day_array[1] = 28;
  for ($i = 0; $i < $solMonth-1; $i++)  $total_day = $total_day + $day_array[$i];
  $total_day = $total_day + $solDay;

  // 총 일수 - 1880년까지의 총 일수
  $acc_day = $total_day - 686686 + 1;

  // Get Lunar Year
  $buff_day = $dt[0];
  for ($i = 0; $i <= 162; $i++) {
    if ($acc_day <= $buff_day)  break;
    $buff_day = $buff_day + $dt[$i+1];
  }
  $lunYear = $i + 1881;

  // Get Lunar Month
  $buff_day = $buff_day - $dt[$i];
  $acc_day  = $acc_day - $buff_day;
  if ($kk[$i][12] <> '0') $temp = 13;  else  $temp = 12;
  $m2 = 0;
  for ($j = 0; $j < $temp-1; $j++)  {
    if ($kk[$i][$j] <= '2')  {
      $m2++;
      $m1 = $kk[$i][$j] + 28;
    }  else  {
      $m1 = $kk[$i][$j] + 26;
    }
    if ($acc_day <= $m1)  break;
    $acc_day = $acc_day - $m1;
  }
  $m0 = $j;
  $lunMonth = $m2;

  // Get Lunar Day
  $lunDay = $acc_day;

  if (($kk[$lunYear-1881][12] <> '0') && ($kk[$lunYear-1881][$m0] > '2'))
    $isLeap = true;
  else
    $isLeap = false;

  // 계산된 날짜를 문자열로 만들어서 Return
  $str = $lunYear;
  if ($lunMonth < 10)  $str .= "-0".$lunMonth;
  else  $str .= "-".$lunMonth;
  if ($lunDay < 10)  $str .= "-0".$lunDay;
  else  $str .= "-".$lunDay;
  if ($isLeap)  $str .= " (윤달)";

  return  $str;
}

function Lunar2Solar($lunYear, $lunMonth, $lunDay, $isLeap)
{
  global $kk, $dt, $day_array;

  if (($lunYear < 1881) || ($lunYear > 2043))  return  "error!!!";
  if (($lunMonth < 1) || ($lunMonth > 12))  return  "error!!!";
  if (($lunDay < 1) || ($lunDay > 30))  return  "error!!!";

  $yy = -1;
  $acc_day = 0;

  if ($lunYear <> 1881)  {
    $yy = $lunYear - 1882;
    for ($i = 0; $i <= $yy; $i++)  {
      for ($j = 0; $j <= 12; $j++)  $acc_day = $acc_day + $kk[$i][$j];
      if ($kk[$i][12] == '0')  $acc_day = $acc_day + 336;
      else  $acc_day = $acc_day + 362;
    }
  }

  $yy++;
  $n2 = $lunMonth - 1;
  $mm = -1;

  $r = 2;
  while ($r != 1) {
    $mm++;
    if ($kk[$yy][$mm] > '2')  {
      $acc_day = $acc_day + 26 + $kk[$yy][$mm];
      $n2++;
    }  else  {
      if ($mm == $n2)  break;
      else  $acc_day = $acc_day + 28 + $kk[$yy][$mm];
    }
  }
  
  // 윤달이면...
  if ($isLeap)   $acc_day = $acc_day + 28 + $kk[$yy][$mm];
  $acc_day = $acc_day + $lunDay + 29;
  $yy = 1880;

  $r = 2;
  while ($r != 1)  {
    $yy++;
    $mm = 365;
    if ((($yy % 4) ===0 ) &&  (($yy % 100) != 0) || (($yy % 400) == 0))  $mm = 366;
    if ($acc_day <= $mm)  break;
    $acc_day = $acc_day - $mm;
  }

  $solYear = $yy;
  $say_array[1] = $mm - 337;
  $yy = 0;

  $r = 2;
  while ($r != 1)  {
    $yy++;
    if ($acc_day <= $day_array[$yy-1])  break;
    $acc_day = $acc_day - $day_array[$yy-1];
  }

  $solMonth = $yy;
  $solDay = $acc_day;

  // 계산된 날짜를 문자열로 만들어서 Return
  $str = $solYear;
  if ($solMonth < 10)  $str .= "-0".$solMonth;
  else  $str .= "-".$solMonth;
  if ($solDay < 10)  $str .= "-0".$solDay;
  else  $str .= "-".$solDay;

  return  $str;
}


if ($action == "lun") {
  $y = substr($date, 0, 4);
  $m = substr($date, 5, 2);
  $d = substr($date, 8, 2);
  $in_sol_date = $date;
  $lun_date = Solar2Lunar($y, $m, $d);
}
if ($action == "sol") {
  $y = substr($date, 0, 4);
  $m = substr($date, 5, 2);
  $d = substr($date, 8, 2);
  $in_lun_date = $date;
  $sol_date = Lunar2Solar($y, $m, $d, $leap);
}
?>
<html>
<body>
<form method=post action='./sollun.php'>
<input type=hidden name=action value='lun'>
<input type=text name=date size=10 maxlength=10 value='<? echo "$in_sol_date"; ?>'>
<input type=submit value=' 양력을 음력으로... '>
<? echo "$lun_date"; ?>
</form>
<br>
<form method=post action='./sollun.php'>
<input type=hidden name=action value='sol'>
<input type=radio name=leap value=0>평달
<input type=radio name=leap value=1>윤달
<input type=text name=date size=10 maxlength=10 value='<? echo "$in_lun_date"; ?>'>
<input type=submit value=' 음력을 양력으로... '>
<? echo "$sol_date"; ?>
</form>
</body>
</html>